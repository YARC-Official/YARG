name: Builder

on: [push, pull_request]

jobs:
  buildAndTestForLinuxBasedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # projectPath:
        #   - test-project
        unityVersion:
          - 2021.3.21f1
        targetPlatform:
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
    steps:

      # Checkout
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      # - uses: actions/cache@v2
      #   with:
      #     path: ${{ matrix.projectPath }}/Library
      #     key:
      #       Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{
      #       hashFiles(matrix.projectPath) }}
      #     restore-keys: |
      #       Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
      #       Library-${{ matrix.projectPath }}-
      #       Library-

      # Test
      # - uses: game-ci/unity-test-runner@v2
      #   id: testRunner
      #   env:
      #     UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
      #   with:
      #     # projectPath: ${{ matrix.projectPath }}
      #     unityVersion: ${{ matrix.unityVersion }}
      #     githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Upload test
      # - uses: actions/upload-artifact@v2
      #   if: always()
      #   with:
      #     name: Test results (all modes)
      #     path: ${{ steps.testRunner.outputs.artifactsPath }}

      # Build
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          # projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}

      # Upload build
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build

  buildForWindowsBasedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        # projectPath:
        #   - test-project
        unityVersion:
          - 2021.3.21f1
        targetPlatform:
          - StandaloneWindows # Build a Windows 32-bit standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
    steps:
      # Checkout
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      # - uses: actions/cache@v2
      #   with:
      #     path: ${{ matrix.projectPath }}/Library
      #     key:
      #       Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{
      #       hashFiles(matrix.projectPath) }}
      #     restore-keys: |
      #       Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
      #       Library-${{ matrix.projectPath }}-
      #       Library-

      # Build
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          # projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
      
      # Upload build
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build

  buildForMacOSBasedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        # projectPath:
        #   - test-project
        unityVersion:
          - 2021.3.21f1
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone.

    steps:
      # Checkout
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      # - uses: actions/cache@v2
      #   with:
      #     path: ${{ matrix.projectPath }}/Library
      #     key:
      #       Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{
      #       hashFiles(matrix.projectPath) }}
      #     restore-keys: |
      #       Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
      #       Library-${{ matrix.projectPath }}-
      #       Library-

      # Build
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          # projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}

      # Upload build
      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: build